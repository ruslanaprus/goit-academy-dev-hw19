name: Java CI with Gradle and Test Container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        env:
          GOIT_DB2_URL: ${{ secrets.GOIT_DB2_URL }}
          GOIT_DB_USER: ${{ secrets.GOIT_DB_USER }}
          GOIT_DB_PASS: ${{ secrets.GOIT_DB_PASS }}
          SECRET: ${{ secrets.SECRET }}
        run: ./gradlew build

  test:
    runs-on: ubuntu-latest
    needs: build # Ensures the test job runs only if the build job succeeds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Tests
        env:
          GOIT_DB2_URL: ${{ secrets.GOIT_DB2_URL }}
          GOIT_DB_USER: ${{ secrets.GOIT_DB_USER }}
          GOIT_DB_PASS: ${{ secrets.GOIT_DB_PASS }}
          SECRET: ${{ secrets.SECRET }}
        run: ./gradlew test